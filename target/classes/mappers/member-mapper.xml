<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC
"-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">

	<resultMap id="resultMember" type="Member">
	
		<id property="userid" column="userid" />
		<result property="userpwd" column="userpwd" />
		<result property="username" column="username" />
		<result property="gender" column="gender" />
		<result property="fulladdress" column="fulladdress" />
		<result property="detailaddress" column="detailaddress" />
		<result property="roadaddress1" column="roadaddress1" />
		<result property="roadaddress2" column="roadaddress2" />
		
		<result property="phone" column="phone" />
		<result property="email" column="email" />
		<result property="birthday" column="birthday" />
		<result property="enrolldate" column="enrolldate" />
		<result property="outdate" column="outdate" />
	</resultMap>

	<select id="selectLogin" parameterType="Member" 
	 resultMap="resultMember" useCache="true">
		select * from member 
		where userid = #{userid} 
		and userpwd = #{userpwd}
	</select>
	
	<select id="selectCheckId" parameterType="string" 
	resultType="_int" useCache="true">
		select count(userid) from member 
		where userid = #{userid}
	</select>
	
	<select id="selectMember" parameterType="string" 
	resultType="Member" useCache="true">
		select * from member 
		where userid = #{userid}
	</select>
	
	
	<select id="selectMemberId" parameterType="Member"
	resultType="String" useCache="true">
		SELECT userid FROM member WHERE username = #{username} AND email = #{email}


	</select>
	
	
	
	
	
	
	<select id="selectList" resultMap="resultMember" 
	useCache="true">
		select * from member
	</select>
	
	<insert id="insertMember" parameterType="Member" useGeneratedKeys="true">
		insert into member 
		values (memberno_seq.nextval, #{userid}, #{userpwd}, 
		#{username}, #{gender}, #{fulladdress}, #{detailaddress}, 
		#{roadaddress1}, #{roadaddress2}, #{phone}, 
		#{email},  sysdate, sysdate, default)
	</insert>
	
	<delete id="deleteMember" parameterType="string">
		delete from member where userid = #{userid}
	</delete>
	
	<update id="updateMember" parameterType="Member">
		update member 
		set userpwd = #{userpwd}, age = #{age}, 
		email = #{email}, phone = #{phone}, etc = #{etc}, 
		hobby = #{hobby} where userid = #{userid}
	</update>
	
	<!-- 네이버 로그인해보기 / 카카오로그인 -->
	<select id="checklogin" parameterType="String" resultType="_int">
		<![CDATA[
			select count(*) from member where email = #{email}
		]]>
	</select>
	
		<!-- 로그인 -->
	<select id="loginCheck" parameterType="Member" resultType="Member">
		<![CDATA[
			select * from member
			where email = #{email}
		]]>
	</select>
	<!-- 로그인 -->
	
	



</mapper>
